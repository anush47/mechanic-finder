openapi: 3.1.0
info:
  title: Nearby Mechanic Finder API
  version: 1.0.0
  description: API for connecting vehicle owners with nearby mechanics.
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Auth
    description: Authentication and authorization
  - name: Users
    description: User profile operations
  - name: Mechanics
    description: Mechanic profile and availability
  - name: Bookings
    description: Booking management
  - name: Reviews
    description: Review system
  - name: Admin
    description: Administrative operations
  - name: Notifications
    description: Notification management
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
  /auth/login:
    post:
      tags:
        - Auth
      summary: Authenticate user and return tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid refresh token
  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout user and invalidate tokens
      responses:
        '204':
          description: Logout successful
  /users/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
    put:
      tags:
        - Users
      summary: Update current user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /mechanics:
    get:
      tags:
        - Mechanics
      summary: List available mechanics
      parameters:
        - in: query
          name: latitude
          schema:
            type: number
          required: true
          description: Latitude for location-based search
        - in: query
          name: longitude
          schema:
            type: number
          required: true
          description: Longitude for location-based search
        - in: query
          name: radius
          schema:
            type: number
          required: false
          description: Search radius in kilometers
      responses:
        '200':
          description: List of mechanics retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MechanicProfile'
  /mechanics/profile:
    get:
      tags:
        - Mechanics
      summary: Get current mechanic profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Mechanic profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MechanicProfile'
        '401':
          description: Unauthorized
    post:
      tags:
        - Mechanics
      summary: Create or update mechanic profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MechanicProfileRequest'
      responses:
        '200':
          description: Mechanic profile created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MechanicProfile'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /bookings:
    post:
      tags:
        - Bookings
      summary: Create a new booking
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookingRequest'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
    get:
      tags:
        - Bookings
      summary: List bookings for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bookings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
  /bookings/{bookingId}:
    get:
      tags:
        - Bookings
      summary: Get booking details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Booking details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '404':
          description: Booking not found
    put:
      tags:
        - Bookings
      summary: Update booking status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookingStatusRequest'
      responses:
        '200':
          description: Booking status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Booking not found
  /reviews:
    post:
      tags:
        - Reviews
      summary: Submit a review for a mechanic
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequest'
      responses:
        '201':
          description: Review submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /reviews/{mechanicId}:
    get:
      tags:
        - Reviews
      summary: Get reviews for a mechanic
      parameters:
        - in: path
          name: mechanicId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of reviews retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Mechanic not found
  /admin/users:
    get:
      tags:
        - Admin
      summary: List all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
  /admin/mechanics:
    get:
      tags:
        - Admin
      summary: List all mechanics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of mechanics retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MechanicProfile'
        '401':
          description: Unauthorized
  /notifications:
    get:
      tags:
        - Notifications
      summary: Get notifications for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of notifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '401':
          description: Unauthorized
    post:
      tags:
        - Notifications
      summary: Mark notifications as read
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notificationIds:
                  type: array
                  items:
                    type: string
              required:
                - notificationIds
      responses:
        '200':
          description: Notifications marked as read successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        name:
          type: string
        role:
          type: string
          enum: [user, mechanic]
      required:
        - email
        - password
        - name
        - role

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken

    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/UserProfile'

    UserProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, mechanic, admin]
        phone:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number

    UpdateUserProfileRequest:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number

    MechanicProfile:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        services:
          type: array
          items:
            type: string
        availability:
          type: boolean
        rating:
          type: number
        certifications:
          type: array
          items:
            type: string
        experienceYears:
          type: integer
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number

    MechanicProfileRequest:
      type: object
      properties:
        services:
          type: array
          items:
            type: string
        availability:
          type: boolean
        certifications:
          type: array
          items:
            type: string
        experienceYears:
          type: integer
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
      required:
        - services
        - availability
        - experienceYears
        - location

    CreateBookingRequest:
      type: object
      properties:
        mechanicId:
          type: string
        scheduledTime:
          type: string
          format: date-time
        serviceType:
          type: string
        issueDescription:
          type: string
      required:
        - mechanicId
        - serviceType

    UpdateBookingStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum: [pending, accepted, completed, canceled]
      required:
        - status

    Booking:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        mechanicId:
          type: string
        scheduledTime:
          type: string
          format: date-time
        serviceType:
          type: string
        status:
          type: string
        issueDescription:
          type: string

    CreateReviewRequest:
      type: object
      properties:
        mechanicId:
          type: string
        rating:
          type: number
        comment:
          type: string
      required:
        - mechanicId
        - rating

    Review:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        mechanicId:
          type: string
        rating:
          type: number
        comment:
          type: string
        createdAt:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        message:
          type: string
        read:
          type: boolean
        createdAt:
          type: string
          format: date-time
